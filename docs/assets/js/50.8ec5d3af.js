(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{514:function(t,s,_){"use strict";_.r(s);var v=_(35),r=Object(v.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"html-css等面试题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#html-css等面试题"}},[t._v("#")]),t._v(" html/css等面试题")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"html"}},[t._v("html")])]),t._v(" "),_("li",[_("a",{attrs:{href:"css"}},[t._v("css")])]),t._v(" "),_("li",[t._v("[手机端适配]")]),t._v(" "),_("li",[_("a",{attrs:{href:"#%E7%BD%91%E7%BB%9C"}},[t._v("网络")])])]),t._v(" "),_("h2",{attrs:{id:"html"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" html")]),t._v(" "),_("h2",{attrs:{id:"css"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" css")]),t._v(" "),_("h3",{attrs:{id:"盒模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),_("p",[_("code",[t._v("content-box")]),t._v("标准盒模型  "),_("code",[t._v("border-box")]),t._v(" IE盒模型")]),t._v(" "),_("h3",{attrs:{id:"bfc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),_("p",[t._v("block format content  块级格式化上下文 是一个独立的渲染区域，让处于 BFC 内部的元素与外部的元素相互隔离，使内外元素的定位不会相互影响。")]),t._v(" "),_("h3",{attrs:{id:"选择器优先级"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#选择器优先级"}},[t._v("#")]),t._v(" 选择器优先级")]),t._v(" "),_("p",[t._v("!important > 行内样式 > #id > .class > tag > * > 继承 > 默认，选择器从右向左解析")]),t._v(" "),_("h3",{attrs:{id:"css动画"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css动画"}},[t._v("#")]),t._v(" CSS动画")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("css画一个扇形")])]),t._v(" "),_("li",[_("p",[_("a",{attrs:{href:"https://www.30secondsofcode.org/css/p/1",target:"_blank",rel:"noopener noreferrer"}},[t._v("css动画"),_("OutboundLink")],1),_("a",{attrs:{href:"https://notes.itzkp.com/1.quickcheck/1.%E5%89%8D%E7%AB%AF/2.CSS%E5%92%8CCSS3%E9%80%9F%E6%9F%A5.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("css动画"),_("OutboundLink")],1)])]),t._v(" "),_("li",[_("p",[t._v("css keyframe动画")])]),t._v(" "),_("li",[_("p",[t._v("flex布局")])]),t._v(" "),_("li",[_("p",[t._v("元素垂直居中")])]),t._v(" "),_("li",[_("p",[t._v("恒定宽高比")])]),t._v(" "),_("li",[_("p",[t._v("css清除浮动几种方式")])]),t._v(" "),_("li",[_("p",[t._v("css如何实现三列等宽的布局")])]),t._v(" "),_("li",[_("p",[t._v("三列等宽设百分比能确保宽度完全一致？")])]),t._v(" "),_("li",[_("p",[t._v("css哪些样式可以继承")])]),t._v(" "),_("li",[_("p",[t._v("css3哪些东西，h5哪些东西，举一两个介绍下")])]),t._v(" "),_("li",[_("p",[t._v("bfc")])]),t._v(" "),_("li",[_("p",[t._v("img标签是什么元素")])]),t._v(" "),_("li",[_("p",[t._v("响应式网站和自适用网站有什么区别？？")])])]),t._v(" "),_("p",[t._v("答：自适应布局，不管设备屏幕尺寸如何变化，打开同一个页面看到的内容和布局基本上是一样的，不同的只是内容的尺寸。\n这样就会引发一个问题，那就是如果设备太小，就算网页能够根据屏幕大小进行适配，但是在太小屏幕显示内容过多会看不清楚，从而极大损害用户体验。\n响应式布局正是为了解决这个问题而衍生出来的一种新的布局方式。它可以自动识别屏幕尺寸并做出相应调整的网页设计，页面布局和展示的内容可能会随着屏幕尺寸变化而有所变化。")]),t._v(" "),_("h2",{attrs:{id:"网络"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),_("ul",[_("li",[t._v("TCP 与 HTTP")]),t._v(" "),_("li",[t._v("强缓存，协商缓存")]),t._v(" "),_("li",[t._v("如何对网站的文件和资源进行优化(文件合并，文件压缩，gzip 压缩 js css， 文件使用缓存...)")]),t._v(" "),_("li",[t._v("什么是同源策略，跨域实现的几种方式")]),t._v(" "),_("li",[t._v("什么是雪碧图，如何快速合并雪碧图")]),t._v(" "),_("li",[t._v("google 等浏览器的上传下载请求限制是多少")]),t._v(" "),_("li",[t._v("http 的版本反战历史,http 协议具体等")]),t._v(" "),_("li",[t._v("滚动加载 10 万条数据，dom 卡，如何解决")]),t._v(" "),_("li",[t._v("后台传过来 10 万条数据，如何加载？")])]),t._v(" "),_("p",[t._v("答：")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("十万条数据，即时网络情况再好，一次性加载十万条数据，这里必定会带来性能上的影响，可以考虑异步加载，分批，分时加载，如果有缓存更好")])]),t._v(" "),_("li",[_("p",[t._v("js 是单线程的这点都知道，如果将这十万条数据完全放在这个单线程上面处理，必定会带来糟糕的体验，因此在这里可以考虑 web worker 这项技术，将异步加载的分批数据通过 web worker 处理即可。")])]),t._v(" "),_("li",[_("p",[t._v("上面说到了 js 是单线程，在数据量如此大的情况下面，就要合理的利用异步处理了，比如我们常见的 setTimeout 以及 setInterval 等相关异步处理函数")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);