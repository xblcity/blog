(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{481:function(t,a,s){"use strict";s.r(a);var e=s(35),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-的使用"}},[t._v("#")]),t._v(" git 的使用")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("git 官方文档中文版"),s("OutboundLink")],1),t._v("，git 的操作在文档基本都能找到答案。")]),t._v(" "),s("ul",[s("li",[t._v("克隆仓库")]),t._v(" "),s("li",[t._v("添加文件至暂存区")]),t._v(" "),s("li",[t._v("把暂存区改动提交到本地的版本库")]),t._v(" "),s("li",[t._v("查看/切换/新建分支")]),t._v(" "),s("li",[t._v("本地同步远程仓库代码")]),t._v(" "),s("li",[t._v("删除分支")]),t._v(" "),s("li",[t._v("修改分支名")]),t._v(" "),s("li",[t._v("撤销本地 commit")]),t._v(" "),s("li",[t._v("版本切换/回滚")]),t._v(" "),s("li",[t._v("查看当前分支信息/上游分支")]),t._v(" "),s("li",[t._v("git 贮藏")]),t._v(" "),s("li",[t._v("合并仓库")]),t._v(" "),s("li",[t._v("创建一个空分支")]),t._v(" "),s("li",[t._v("常见报错信息")])]),t._v(" "),s("h2",{attrs:{id:"克隆仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆仓库"}},[t._v("#")]),t._v(" 克隆仓库")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git clone 仓库地址\n")])])]),s("p",[t._v("克隆仓库的指定分支，并修改默认文件名")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git clone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"develop"')]),t._v(" 仓库地址 xbl\n")])])]),s("h2",{attrs:{id:"添加所有文件至暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加所有文件至暂存区"}},[t._v("#")]),t._v(" 添加所有文件至暂存区")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者 add 指定文件")]),t._v("\n")])])]),s("h2",{attrs:{id:"把暂存区改动提交到本地的版本库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#把暂存区改动提交到本地的版本库"}},[t._v("#")]),t._v(" 把暂存区改动提交到本地的版本库")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),t._v("\n")])])]),s("p",[t._v("如果使用了 "),s("code",[t._v("husky")]),t._v(" 配置了 "),s("code",[t._v("git")]),t._v(" 钩子函数，想要忽略检查可以在后面加上 "),s("code",[t._v("--no-verify")]),t._v(" 参数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("no"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("verify\n")])])]),s("h2",{attrs:{id:"将分支推送至远程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将分支推送至远程"}},[t._v("#")]),t._v(" 将分支推送至远程")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git push origin\n")])])]),s("p",[t._v("如果当前分支只有一个追踪分支，那么主机名都可以省略。即 "),s("code",[t._v("git push")])]),t._v(" "),s("p",[t._v("如果是本地新建的分支，而远程不存在，需要使用下面命令")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("upstream origin dev\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以简写为 git push --u origin dev")]),t._v("\n")])])]),s("h2",{attrs:{id:"查看-切换-新建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看-切换-新建分支"}},[t._v("#")]),t._v(" 查看/切换/新建分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看本地所有分支，当前分支用绿色表示")]),t._v("\ngit branch\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看所有分支，远程仓库会用红色表示出来，一般是 remote/origin/master")]),t._v("\ngit branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 切换至develop分支，没有则会新建")]),t._v("\ngit checkout develop\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拉取远程分支，并在本地创建一个与远程分支名字一样的分支")]),t._v("\ngit checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b 本地分支名 origin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("远程分支名\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看当前文件状态，如果修改了文件，则会显示一个修改文件的List")]),t._v("\ngit status\n")])])]),s("h2",{attrs:{id:"本地同步远程仓库代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地同步远程仓库代码"}},[t._v("#")]),t._v(" 本地同步远程仓库代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git pull  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// git pull 是git fecth 与 git merge的集合")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者")]),t._v("\ngit fetch\n\ngit merge "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// git merge实际上是本地分支与remote分支进行合并")]),t._v("\n")])])]),s("h2",{attrs:{id:"合并分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),s("p",[t._v("如果是在本地进行分支合并，可以使用下面的步骤，将 dev 分支合并至 master 分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git checkout master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 切换至本地master分支")]),t._v("\n\ngit merge dev "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本地master分支与 本地dev分支进行合并")]),t._v("\n\ngit push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将本地 master分支推送至 remote master  存在多个远程仓库才会用到 -u")]),t._v("\n")])])]),s("p",[t._v("合并分支在远程仓库也包括 "),s("code",[t._v("PR")]),t._v(" (pull request)")]),t._v(" "),s("h2",{attrs:{id:"修改分支名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改分支名"}},[t._v("#")]),t._v(" 修改分支名")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m oldName newName\n")])])]),s("h2",{attrs:{id:"删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),s("p",[t._v("删除本地 develop 分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" develop\n")])])]),s("p",[t._v("删除远程仓库 develop 分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git push origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" develop\n")])])]),s("h2",{attrs:{id:"撤销-commit-回退"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销-commit-回退"}},[t._v("#")]),t._v(" 撤销 commit(回退)")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git log\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("soft "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n")])])]),s("p",[t._v("推送至远程")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("force\n")])])]),s("p",[s("code",[t._v("HEAD^")]),t._v(": 上一个版本，也可以写成 HEAD~1, 如果你进行了 2 次 commit，想都撤回，可以使用 HEAD~2")]),t._v(" "),s("p",[s("code",[t._v("--soft")]),t._v(": 不删除工作空间改动代码，撤销 commit，不撤销 git add .，然后可以git stash，再重新提交")]),t._v(" "),s("p",[s("code",[t._v("--mixed")]),t._v(": 意思是：不删除工作空间改动代码，撤销 commit，并且撤销 git add . 操作\n这个为默认参数, git reset --mixed HEAD^ 和 git reset HEAD^ 效果是一样的。")]),t._v(" "),s("p",[s("code",[t._v("--hard")]),t._v(": 删除工作空间改动代码，撤销 commit，撤销 git add . 注意完成这个操作后，就恢复到了上一次的 commit 状态。")]),t._v(" "),s("p",[s("em",[t._v("如果只是 commit 注释写错了，只是想改注释")])]),t._v(" "),s("p",[s("code",[t._v("git commit --amend")]),t._v(" 进入 vim 编辑器修改注释然后保存即可")]),t._v(" "),s("h2",{attrs:{id:"版本切换-回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本切换-回滚"}},[t._v("#")]),t._v(" 版本切换/回滚")]),t._v(" "),s("p",[t._v("回滚到历史版本")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用git log命令查看所有的历史版本，获取你git的某个历史版本的id")]),t._v("\ngit log\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// git log 默认只显示四条，按 ↓ 键会显示更多记录")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设需要回滚这条commit")]),t._v("\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard b87d84885b5d3fd74c4e658c0ed6a6260d8d849a\n")])])]),s("p",[t._v("从历史版本切换到最新版本")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git reflog "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看命令的记录")]),t._v("\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("580361")]),t._v("e  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  git reset 来返回到相应的版本即可，HEAD前面的一串字符为我们简写的ID")]),t._v("\n")])])]),s("h2",{attrs:{id:"查看当前分支信息-上游分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看当前分支信息-上游分支"}},[t._v("#")]),t._v(" 查看当前分支信息/上游分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("vv\n")])])]),s("h2",{attrs:{id:"查看远程分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看远程分支"}},[t._v("#")]),t._v(" 查看远程分支")]),t._v(" "),s("p",[t._v("remote branch 也叫远程分支，一般分支名为 origin/master 等")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git remote "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 列出远程所有主机，比如 origin")]),t._v("\ngit branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 列出远程分支")]),t._v("\n")])])]),s("p",[t._v("如果没有更新到某个主机最新的分支，重新获取 origin 上面的分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git remote update origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("prune\n")])])]),s("h2",{attrs:{id:"修改远程仓库地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改远程仓库地址"}},[t._v("#")]),t._v(" 修改远程仓库地址")]),t._v(" "),s("p",[t._v("如果远程仓库地址进行了更换，我们需要修改 origin 的地址")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git remote "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看远程origin")]),t._v("\ngit remote rm origin "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除远程origin")]),t._v("\ngit remote add origin xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n")])])]),s("p",[t._v("git remote add origin git@10.1.2.7:Visual-FE/BCT.git")]),t._v(" "),s("h2",{attrs:{id:"git-贮藏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-贮藏"}},[t._v("#")]),t._v(" git 贮藏")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E8%B4%AE%E8%97%8F%E4%B8%8E%E6%B8%85%E7%90%86#_git_stashing",target:"_blank",rel:"noopener noreferrer"}},[t._v("git 工具贮藏与清理"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("有时，当你在项目的一部分上已经工作一段时间后，所有东西都进入了混乱的状态， 而这时你想要切换到另一个分支做一点别的事情。 问题是，你不想仅仅因为过会儿回到这一点而为做了一半的工作创建一次提交。 针对这个问题的答案是 git stash 命令。")]),t._v(" "),s("p",[t._v("需要注意的是，在贮藏的时候不要忘记把非版本跟踪的文件也贮藏起来，为了以防万一，可以使用 VS Code 提供的贮藏功能。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git status\n\ngit stash "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行贮藏命令，当前工作目录是干净的了")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// gist stash save '暂存修改' 可以在暂存的时候备注暂存信息")]),t._v("\n\ngit stash list "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 贮藏列表")]),t._v("\n\ngit checkout xxx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 切换到另一个分支")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 做出改动之后，切换至原分支")]),t._v("\n\ngit checkout xxx\n\ngit stash apply "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 应用最近一次的贮藏")]),t._v("\n")])])]),s("h2",{attrs:{id:"创建一个空分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个空分支"}},[t._v("#")]),t._v(" 创建一个空分支")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000004931751",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 GIT 中创建一个空分支"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"常见报错信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见报错信息"}},[t._v("#")]),t._v(" 常见报错信息")]),t._v(" "),s("h3",{attrs:{id:"git-push-fatal-no-configured-push-destination"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push-fatal-no-configured-push-destination"}},[t._v("#")]),t._v(" git push fatal: No configured push destination.")]),t._v(" "),s("p",[t._v("git 本地仓库没有远程分支连接"),s("br"),t._v("\ngit remote -v 察看当前远程分支列表"),s("br"),t._v("\n如果不显示, git remote add origin url"),s("br"),t._v("\n再次推送")]),t._v(" "),s("h3",{attrs:{id:"git-push-fatal-the-current-branch-master-has-no-upstream-branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push-fatal-the-current-branch-master-has-no-upstream-branch"}},[t._v("#")]),t._v(" git push fatal: The current branch master has no upstream branch.")]),t._v(" "),s("p",[t._v("本地分支没有与远程仓库的分支进行关联\nTo push the current branch and set the remote as upstream, use git push --set-upstream origin master")])])}),[],!1,null,null,null);a.default=r.exports}}]);