(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{584:function(t,e,r){"use strict";r.r(e);var l=r(48),_=Object(l.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"js-ts-网络相关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js-ts-网络相关"}},[t._v("#")]),t._v(" JS/TS/网络相关")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844903815053852685",target:"_blank",rel:"noopener noreferrer"}},[t._v("常规面试题上"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844903828093927431",target:"_blank",rel:"noopener noreferrer"}},[t._v("常规面试题中"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/Yangfan2016/learn-translate/blob/master/3-30secondsofinterviews_zh.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试30sJS/React"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844903776512393224",target:"_blank",rel:"noopener noreferrer"}},[t._v("js常见面试题"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"一些重要的基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一些重要的基础"}},[t._v("#")]),t._v(" 一些重要的基础")]),t._v(" "),r("h3",{attrs:{id:"变量类型及基本方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#变量类型及基本方法"}},[t._v("#")]),t._v(" 变量类型及基本方法")]),t._v(" "),r("ul",[r("li",[t._v("值类型6种和引用类型4种，null是引用类型吗")]),t._v(" "),r("li",[t._v("基本数据类型和复杂数据类型存储有什么区别")]),t._v(" "),r("li",[t._v("typeof能否判断正确类型，Object.prototype.call()呢")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/23",target:"_blank",rel:"noopener noreferrer"}},[t._v("3 个判断数组的方法"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("instanceof能否判断数据类型，实现的原理是什么，手写实现")]),t._v(" "),r("li",[t._v("for of , for in 和 forEach,map 的区别")]),t._v(" "),r("li",[t._v("如何判断一个变量是不是数组")]),t._v(" "),r("li",[t._v("类数组和数组有什么区别，类数组如何转换成数组")]),t._v(" "),r("li",[t._v("你用过数组的哪些方法 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN Array"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/7028018256266919973",target:"_blank",rel:"noopener noreferrer"}},[t._v("数组常用方法"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("哪些方法能改变原数组，哪些不会")]),t._v(" "),r("li",[t._v("深浅拷贝，赋值与拷贝的区别 "),r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/copy.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("赋值与深浅拷贝"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("数组浅拷贝有哪三种方法")]),t._v(" "),r("li",[t._v("== 和 === 有什么区别，类型转换的规则")]),t._v(" "),r("li",[t._v("Object.is和 == === 有什么区别")]),t._v(" "),r("li",[t._v("了解object原型上的方法 "),r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/object-methods.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object 构造器及原型上的方法"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("JS隐式转换：类型转换：字符串拼接，==运算符(除了null之外，其余全部用===)，用!!可以判断truly,falsely变量")]),t._v(" "),r("li",[t._v("为什么 0.1 + 0.2 != 0.3 ?")])]),t._v(" "),r("h3",{attrs:{id:"原型与原型链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[t._v("#")]),t._v(" 原型与原型链")]),t._v(" "),r("ul",[r("li",[t._v("什么是原型链，原型链解决了什么问题")]),t._v(" "),r("li",[t._v("prototype与__proto__有什么区别")]),t._v(" "),r("li",[t._v("如何使用ES5实现类与继承，"),r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/inherit.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("类与继承"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("constructor有什么作用：没有实际作用，但应尽量让对象的constructor指向其构造函数")]),t._v(" "),r("li",[t._v("原型，instanceof原理和实现")])]),t._v(" "),r("h3",{attrs:{id:"作用域与闭包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#作用域与闭包"}},[t._v("#")]),t._v(" 作用域与闭包")]),t._v(" "),r("ul",[r("li",[t._v("this有什么作用？获取对象。this是函数运行时的一个环境对象")]),t._v(" "),r("li",[t._v("this指向谁，this绑定的优先级，箭头函数的this "),r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/this.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解this"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("什么是闭包，闭包的作用。使用闭包写一个缓存函数 "),r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/scope-closures.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("作用域与闭包"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("闭包的优缺点")]),t._v(" "),r("li",[t._v("call, apply, bind的使用场景及作用(借用方法)")]),t._v(" "),r("li",[t._v("手写call, apply, bind "),r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/call.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("call, apply, bind手动实现"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("作用域分为哪几类，ES6新增的局部作用域如何理解")]),t._v(" "),r("li",[t._v("谈谈你对JS执行上下文栈和作用域链的理解")]),t._v(" "),r("li",[t._v("new原理是什么(做了哪些)，如何实现一个new"),r("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/12",target:"_blank",rel:"noopener noreferrer"}},[t._v("new"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"js异步知识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js异步知识"}},[t._v("#")]),t._v(" JS异步知识")]),t._v(" "),r("ul",[r("li",[t._v("为什么定时器打印出来的都是同一个数，如何解决：立即执行函数/let")]),t._v(" "),r("li",[t._v("宏任务微任务如何理解")]),t._v(" "),r("li",[t._v("你知道哪些回调函数")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/eventloop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 事件队列/循环(Event Loop)"),r("OutboundLink")],1),t._v(" 包含对宏任务，Promise, 计时器的理解")]),t._v(" "),r("li",[t._v("Promise有哪些优点，如何解决回调地狱问题，怎么写")]),t._v(" "),r("li",[t._v("Promise有哪几种状态，Promise有什么缺点")]),t._v(" "),r("li",[t._v("Promise是立即执行函数，一旦创建立即执行。then里面的函数是异步执行的")]),t._v(" "),r("li",[t._v("async, Promise, generator之间的关系。手写Promise")]),t._v(" "),r("li",[t._v("如何使用Promise发送请求"),r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/ajax.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AJAX"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("async,await如何理解与使用")])]),t._v(" "),r("h3",{attrs:{id:"es6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[t._v("#")]),t._v(" ES6")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/es6.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6 知识点"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("let, const有变量提升吗，const定义的值可以修改吗")]),t._v(" "),r("li",[t._v("模板字符串，解构")]),t._v(" "),r("li",[t._v("class如何实现继承，constructor起到什么作用呢")]),t._v(" "),r("li",[t._v("Set和Map如何去重")]),t._v(" "),r("li",[t._v("commonjs与es6模块化的不同之处")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/xblcity/blog/blob/master/js-practice/array.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("数组的数据处理"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("reduce, map, filter如何使用。reduce对数组进行计算")])]),t._v(" "),r("h2",{attrs:{id:"性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),r("ul",[r("li",[t._v("较全面的"),r("a",{attrs:{href:"https://juejin.cn/book/6844733750048210957?referrer=574f8d8d2e958a005fd4edac",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化实践"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://xblcity.github.io/blog/js-practice/throttle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解节流与防抖函数"),r("OutboundLink")],1),t._v("，减少请求次数")]),t._v(" "),r("li",[t._v("懒加载，减少回流&重绘，合理利用缓存")]),t._v(" "),r("li",[t._v("DNS预解析")]),t._v(" "),r("li",[t._v("首屏SSR，减少白屏时间，有利于SEO，利于爬虫")])]),t._v(" "),r("h2",{attrs:{id:"手写题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#手写题"}},[t._v("#")]),t._v(" 手写题")]),t._v(" "),r("ul",[r("li",[t._v("如何判断一个数组")]),t._v(" "),r("li",[t._v("数组去重")]),t._v(" "),r("li",[t._v("数组扁平化")]),t._v(" "),r("li",[t._v("判断对象是否包含某方法")]),t._v(" "),r("li",[t._v("类与继承")]),t._v(" "),r("li",[t._v("防抖节流")]),t._v(" "),r("li",[t._v("实现instance")]),t._v(" "),r("li",[t._v("实现Promise")]),t._v(" "),r("li",[t._v("Apply, Call，Bind手写")]),t._v(" "),r("li",[t._v("写一个闭包的例子，闭包的作用")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844904052237713422",target:"_blank",rel:"noopener noreferrer"}},[t._v("手写代码"),r("OutboundLink")],1),t._v("可以看举的例子")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844903976081555470",target:"_blank",rel:"noopener noreferrer"}},[t._v("看数组的面试题"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("取数组的最大值，reduce")])]),t._v(" "),r("h2",{attrs:{id:"ts-step2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ts-step2"}},[t._v("#")]),t._v(" TS(Step2)")]),t._v(" "),r("ul",[r("li",[t._v("TS相比JS有什么优点")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/ts-basic.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typescript 认知"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("接口的继承 extends")]),t._v(" "),r("li",[t._v("泛型")]),t._v(" "),r("li",[t._v("类型断言")]),t._v(" "),r("li",[t._v("Omit作用：过滤属性，Pick选取属性")]),t._v(" "),r("li",[t._v("interface和type区别，类型别名和接口很像，但是类型别名不能被 extends 和 implements 。不过类型别名可以很好的表示交叉类型和联合类型。")]),t._v(" "),r("li",[t._v("并且type可以用于表示基本类型")])]),t._v(" "),r("h2",{attrs:{id:"js进阶-step2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js进阶-step2"}},[t._v("#")]),t._v(" JS进阶(Step2)")]),t._v(" "),r("ul",[r("li",[t._v("设计模式: 工厂模式(new)，装饰模式(redux connect)，代理模式(axios),发布订阅模式(DOM事件绑定)"),r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/design-mode.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 设计模式"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844903902484103182#heading-5",target:"_blank",rel:"noopener noreferrer"}},[t._v("十大排序算法"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/algorithm.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据结构与算法"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("二分查找(前提是有序列表)")]),t._v(" "),r("li",[t._v("可略过"),r("a",{attrs:{href:"https://xblcity.github.io/blog/js-base/func-program.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("高阶函数"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"浏览器-网络"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器-网络"}},[t._v("#")]),t._v(" 浏览器/网络")]),t._v(" "),r("ul",[r("li",[t._v("事件流分为哪几个阶段？事件代理优点"),r("a",{attrs:{href:"https://github.com/xblcity/blog/blob/master/html-css/event.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Event事件"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("跨域的实现方案，JSONP如何使用，CORS怎么配置,Nginx反向代理(proxy_pass)")]),t._v(" "),r("li",[t._v("websocket")]),t._v(" "),r("li",[t._v("H5浏览器存储方案，怎么操作")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/xblcity/blog/blob/master/fe-system/render.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("从输入网址到页面渲染经历了什么"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("浏览器缓存优先级，强缓存与协商缓存浏览器渲染原理")]),t._v(" "),r("li",[t._v("TCP 与 HTTP区别")]),t._v(" "),r("li",[t._v("HTTP相关知识"),r("a",{attrs:{href:"https://github.com/xblcity/blog/blob/master/fe-system/http.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("http 知识体系"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("Get和Post区别")]),t._v(" "),r("li",[t._v("如何对网站的文件和资源进行优化(文件合并，文件压缩，gzip 压缩 js css， 文件使用缓存...)")]),t._v(" "),r("li",[t._v("什么是同源策略，跨域实现的几种方式")]),t._v(" "),r("li",[t._v("安全问题：XSS, CORS")]),t._v(" "),r("li",[t._v("什么是雪碧图，如何快速合并雪碧图")]),t._v(" "),r("li",[t._v("垃圾回收机制")]),t._v(" "),r("li",[t._v("滚动加载 10 万条数据，dom 卡，如何解决")])])])}),[],!1,null,null,null);e.default=_.exports}}]);